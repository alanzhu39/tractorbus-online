from single_player.round import Round
from single_player.player import Player
from single_player.deck import Deck, Card


class SampleVariable:

    @staticmethod
    def round_one():
        """
        Example round:
        [K♠, 7♥, 10♥, 2♣, 5♣, 5♥, 6♦, 6♠, 2♣, 8♣, 8♠, 9♦, 10♣, 2♦, J♦, J♠, Q♥, K♣, 2♦, A♦, SJo, 4♠, 4♠, 2♥, 5♣]
        [5♦, 5♦, 5♥, 2♥, 5♠, 5♠, 6♣, 6♣, 2♠, 6♦, 6♥, 6♥, 6♠, 2♠, 7♣, 7♣, 7♦, 7♦, 3♣, 7♥, 7♠, 7♠, 8♣, 3♣, 8♦]
        [8♦, 8♥, 8♥, 3♦, 8♠, 9♣, 9♣, 9♦, 3♦, 9♥, 9♥, 9♠, 9♠, 3♥, 10♣, 10♦, 10♦, 10♥, 3♥, 10♠, 10♠, J♣, J♣, 3♠, J♦]
        [J♥, J♥, J♠, 3♠, Q♣, Q♣, Q♦, Q♦, 4♣, Q♥, Q♠, Q♠, K♣, 4♣, K♦, K♦, K♥, K♥, 4♦, K♠, A♣, A♣, A♦, 4♦, A♥]
        [A♥, A♠, A♠, 4♥, SJo, BJo, BJo, 4♥]
        """
        sv.deal_unrandom(sv.sample_round(), sv.function(0.2))

    @staticmethod
    def sample_round():
        sheng_order = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A']
        zj_id = 0
        players = [Player("AA", sheng_order[0]), Player("BB", sheng_order[0]),
                   Player("CC", sheng_order[0]), Player("DD", sheng_order[0])]
        players[zj_id].set_is_zhuang_jia(True)
        return Round(players)


    @staticmethod
    def set_round():
        """
        Set necessary round variables to reflect a changed game state
        :return:
        """

    @staticmethod
    def deal_unrandom(curround, seed):
        """
        Sets a round's deck to a specific shuffle generated by seed
        :param curround: round instance
        :param seed: float between 0 and 1
        :return:
        """
        curround.deck = Deck()
        curround.deck.shuffle_seed(seed)
        hand1 = curround.deck.cards[0:25]
        hand2 = curround.deck.cards[25:50]
        hand3 = curround.deck.cards[50:75]
        hand4 = curround.deck.cards[75:100]
        dipai = curround.deck.cards[100:108]

        curround.players[0].hand = hand1
        curround.players[1].hand = hand2
        curround.players[2].hand = hand4
        curround.players[3].hand = hand4
        curround.discards = dipai


    """
    Functions below here are only used for the purposes of testing variables
    """
    @staticmethod
    def string_to_hand():
        return

    @staticmethod
    def function(i):
        return lambda: i


sv = SampleVariable
if __name__ == "__main__":
    """
    Test stuff here
    """

    sv.deal_unrandom(sv.sample_round(), sv.function(0.2))

